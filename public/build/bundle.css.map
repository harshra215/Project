{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\src\\App.svelte",
    "..\\..\\src\\QuizArea.svelte",
    "..\\..\\src\\Snackbar.svelte"
  ],
  "sourcesContent": [
    "<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  footer {\n    position: absolute;\n    bottom: 24px;\n    right: 30px;\n    padding: 16px;\n\n    color: white;\n    text-align: center;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<script>\n  import QuizArea from './QuizArea.svelte';\n\n  let playerScore = 0;\n  let visible = true;\n</script>\n\n<main>\n\n  {#if visible}\n    <p style=\"color: white; font-size: 24px\">\n      Score:\n      <i>{playerScore} / 10</i>\n    </p>\n  {/if}\n\n  <QuizArea\n    on:score={e => {\n      playerScore = e.detail.score;\n    }}\n    on:resultsScreen={e => {\n      visible = e.detail.showScore;\n    }} />\n\n</main>\n\n<footer>\n  &#x24B8; Harsh Ranjan. Made with\n  <span style=\"font-size: 24px; color: red\">&#x2764;</span>\n  using Svelte\n</footer>\n",
    "<style>\n  #main {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n    height: calc(100vh - 40%);\n    width: calc(100vw - 40%);\n    padding: 15px;\n\n    background-color: white;\n    border-radius: 6px;\n    box-shadow: 0 0 5px white;\n\n    text-align: left;\n  }\n\n  span {\n    display: block;\n    margin-top: 20px;\n  }\n\n  button {\n    margin-top: 15px;\n    margin-right: 15px;\n    padding: 10px;\n    float: right;\n\n    color: white;\n    background-color: #16302b;\n    border: none;\n    border-radius: 10px;\n    cursor: pointer;\n  }\n\n  button:hover {\n    box-shadow: 0 0 5px #16302b;\n  }\n\n  #heading {\n    font-size: 24px;\n    font-weight: bolder;\n  }\n\n  #difficulty {\n    position: absolute;\n    right: 16px;\n    top: 16px;\n    height: 25px;\n    width: 80px;\n    padding: 5px;\n\n    background: #1b3b6f;\n    color: white;\n    text-align: center;\n    border-radius: 16px;\n  }\n\n  #category {\n    font-size: 12px;\n    font-weight: normal;\n  }\n\n  #button-bar {\n    position: absolute;\n    bottom: 16px;\n    right: 0;\n  }\n\n  #choice {\n    margin-top: 16px;\n    padding: 8px;\n\n    border: 1px solid #4e5656;\n    border-radius: 8px;\n  }\n\n  #choice:hover {\n    cursor: pointer;\n    background: #7ddf64;\n    border: 1px solid #7ddf64;\n    color: white;\n  }\n\n  #snackbar {\n    position: absolute;\n    left: 16px;\n    bottom: 24px;\n  }\n\n  #results {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n\n    text-align: center;\n  }\n\n  #score {\n    font-size: 48px;\n  }\n\n  @media screen and (max-width: 960px) {\n    #main {\n      width: calc(100vw - 15%);\n      height: calc(100vh - 30%);\n    }\n    #difficulty {\n      top: -16px;\n    }\n    #score {\n      font-size: 36px;\n    }\n  }\n</style>\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n  import Snackbar from './Snackbar.svelte';\n\n  import { fadeIn, fadeOut } from './transitions.js';\n  import { htmlDecode, shuffle } from './utils.js';\n\n  const dispatch = createEventDispatcher();\n  let data = [];\n\n  let questionNo = 0;\n  let buttonBarVisibility = true;\n  let snackbarVisibility = false;\n  let snackbarMessage = false;\n  // let answeredQuestions = 0;\n  let resultsScreen = false;\n\n  $: representation = [];\n  $: score = 0;\n  $: finalMessage = '';\n\n  function fetchData() {\n    fetch('https://opentdb.com/api.php?amount=10')\n      .then(resp => resp.json())\n      .then(res => {\n        data = res.results;\n\n        representation = data.reduce((acc, curr) => {\n          acc.push({\n            question: htmlDecode(curr.question),\n            answerChoices: shuffle(\n              [...curr.incorrect_answers, curr.correct_answer].map(ans =>\n                htmlDecode(ans)\n              )\n            ),\n            answer: htmlDecode(curr.correct_answer),\n            category: htmlDecode(curr.category),\n            difficulty: curr.difficulty,\n            answerChoice: '',\n            correct: false,\n            answered: false\n          });\n          return acc;\n        }, []);\n      })\n      .catch(e => console.error(e));\n  }\n\n  onMount(fetchData);\n\n  function handleClick(change) {\n    if (snackbarVisibility) snackbarVisibility = !snackbarVisibility;\n\n    if (change === 'f') questionNo += 1;\n    else questionNo -= 1;\n  }\n\n  function handleAnswerChoice(e = {}) {\n    if (!representation[questionNo].answered) {\n      // answeredQuestions += 1;\n      const representationCopy = { ...representation[questionNo] };\n      representationCopy.answered = true;\n      if (e.target.innerText === representation[questionNo].answer) {\n        representationCopy.correct = true;\n        representationCopy.answerChoice = representation[questionNo].answer;\n        representation[questionNo] = representationCopy;\n        score += 1;\n        snackbarMessage = true;\n        dispatch('score', { score: score });\n      } else {\n        representationCopy.answerChoice = e.target.innerText;\n        representation[questionNo] = representationCopy;\n        snackbarMessage = false;\n      }\n\n      if (questionNo === 9) {\n        buttonBarVisibility = false;\n        resultsScreen = true;\n\n        dispatch('resultsScreen', { showScore: false });\n\n        if (score < 5) {\n          finalMessage = 'Are you on drugs? ðŸ˜µ';\n        } else if (score === 5) {\n          finalMessage = \"Don't give up try harder. ðŸ¤“\";\n        } else {\n          finalMessage = \"You're on fire!!! ðŸ”¥\";\n        }\n      }\n\n      if (!snackbarVisibility) snackbarVisibility = true;\n    }\n  }\n</script>\n\n<div id=\"main\" in:fadeIn out:fadeOut>\n\n  {#if representation.length > 0 && !resultsScreen}\n    <span id=\"heading\">\n      Question {questionNo + 1}\n      <i id=\"category\">(Category - {representation[questionNo].category})</i>\n    </span>\n    <span>{representation[questionNo].question}</span>\n    <div id=\"difficulty\">{representation[questionNo].difficulty}</div>\n\n    {#if representation[questionNo].answerChoices}\n      {#each representation[questionNo].answerChoices as choice}\n        {#if representation[questionNo].answered && representation[questionNo].correct}\n          {#if choice === representation[questionNo].answerChoice}\n            <div\n              id=\"choice\"\n              style=\"background: #7DDF64; color: white; border-color: white\">\n              <i>{choice}</i>\n            </div>\n          {:else}\n            <div id=\"choice\">\n              <i>{choice}</i>\n            </div>\n          {/if}\n        {:else if representation[questionNo].answered && !representation[questionNo].correct}\n          {#if choice === representation[questionNo].answer}\n            <div\n              id=\"choice\"\n              style=\"background: #7DDF64; color: white; border-color: white\">\n              <i>{choice}</i>\n            </div>\n          {:else}\n            <div\n              id=\"choice\"\n              style=\"background: #DE3C4B; color: white; border-color: white\">\n              <i>{choice}</i>\n            </div>\n          {/if}\n        {:else}\n          <div id=\"choice\" on:click={e => handleAnswerChoice(e)}>\n            <i>{choice}</i>\n          </div>\n        {/if}\n      {/each}\n    {/if}\n\n    {#if buttonBarVisibility}\n      <div id=\"button-bar\">\n        {#if questionNo < 9}\n          <button value=\"Next\" on:click={() => handleClick('f')}>Next</button>\n        {/if}\n        {#if questionNo > 0}\n          <button value=\"Back\" on:click={() => handleClick('b')}>\n            Previous\n          </button>\n        {/if}\n      </div>\n    {/if}\n\n    {#if snackbarVisibility}\n      <div id=\"snackbar\" in:fadeIn out:fadeOut>\n        <Snackbar message={snackbarMessage} />\n      </div>\n    {/if}\n    <!-- Uncomment this if you want the user to go back and answer pending questions\n      {:else if answeredQuestions === 10}\n      <p>All answered</p>\n    -->\n  {:else if resultsScreen}\n    <div id=\"results\">\n      <p id=\"score\">\n        Final Score:\n        <i>{score} / 10</i>\n      </p>\n      <p style=\"font-size: 24px\">\n        {@html finalMessage}\n      </p>\n      <p style=\"font-size: 24px\">Refresh the page to play again</p>\n    </div>\n  {:else}\n    <span\n      style=\"position: absolute; left: 50%; top: 50%; transform:\n      translateX(-50%) translateY(-50%); font-weight: bolder; font-size: 36px;\n      margin: 0\">\n      Fetching questions...\n    </span>\n  {/if}\n\n</div>\n",
    "<style>\n  div {\n    height: 48px;\n    width: 344px;\n    padding: 0 16px;\n\n    line-height: 45px;\n    background-color: #4e5656;\n    border-radius: 5px;\n\n    box-shadow: 0 0 5px #4e5656;\n  }\n\n  span {\n    font-size: 16px;\n    color: white;\n  }\n</style>\n\n<script>\n  export let message = '';\n</script>\n\n{#if message}\n  <div style=\"background-color: green; box-shadow: 0 0 5px green;\">\n    <span>Correct Answer</span>\n  </div>\n{:else}\n  <div style=\"background-color: red; box-shadow: 0 0 5px red;\">\n    <span>Incorrect Answer</span>\n  </div>\n{/if}\n"
  ],
  "names": [],
  "mappings": "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"
}